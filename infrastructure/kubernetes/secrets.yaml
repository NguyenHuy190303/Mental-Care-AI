# NOTE: This is a template file. In production, secrets should be managed
# using proper secret management tools like HashiCorp Vault, AWS Secrets Manager,
# or Kubernetes External Secrets Operator.

apiVersion: v1
kind: Secret
metadata:
  name: mental-health-agent-secrets
  namespace: mental-health-agent
type: Opaque
data:
  # Base64 encoded secrets - REPLACE WITH ACTUAL VALUES
  # Use: echo -n "your-secret" | base64

  # OpenAI API Key (REQUIRED)
  OPENAI_API_KEY: "REPLACE_WITH_BASE64_ENCODED_OPENAI_API_KEY"

  # Database Credentials
  POSTGRES_PASSWORD: "REPLACE_WITH_BASE64_ENCODED_POSTGRES_PASSWORD"

  # Redis Password
  REDIS_PASSWORD: "REPLACE_WITH_BASE64_ENCODED_REDIS_PASSWORD"

  # JWT Secret Key (32+ characters)
  JWT_SECRET_KEY: "REPLACE_WITH_BASE64_ENCODED_JWT_SECRET"

  # Encryption Key (32 characters)
  ENCRYPTION_KEY: "REPLACE_WITH_BASE64_ENCODED_ENCRYPTION_KEY"

  # Database URL
  DATABASE_URL: "REPLACE_WITH_BASE64_ENCODED_DATABASE_URL"

  # Email Configuration (Optional)
  SMTP_PASSWORD: "REPLACE_WITH_BASE64_ENCODED_SMTP_PASSWORD"

---
apiVersion: v1
kind: Secret
metadata:
  name: tls-secret
  namespace: mental-health-agent
type: kubernetes.io/tls
data:
  # TLS Certificate and Key (Base64 encoded)
  # Generate using: kubectl create secret tls tls-secret --cert=path/to/cert.pem --key=path/to/key.pem
  tls.crt: "REPLACE_WITH_BASE64_ENCODED_TLS_CERT"
  tls.key: "REPLACE_WITH_BASE64_ENCODED_TLS_KEY"

---
# Example script to generate secrets (DO NOT COMMIT TO VERSION CONTROL)
# #!/bin/bash
#
# # Generate random secrets
# POSTGRES_PASSWORD=$(openssl rand -base64 32)
# REDIS_PASSWORD=$(openssl rand -base64 32)
# JWT_SECRET_KEY=$(openssl rand -base64 32)
# ENCRYPTION_KEY=$(openssl rand -base64 32)
#
# # Create secret
# kubectl create secret generic mental-health-agent-secrets \
#   --namespace=mental-health-agent \
#   --from-literal=OPENAI_API_KEY="your-openai-api-key" \
#   --from-literal=POSTGRES_PASSWORD="$POSTGRES_PASSWORD" \
#   --from-literal=REDIS_PASSWORD="$REDIS_PASSWORD" \
#   --from-literal=JWT_SECRET_KEY="$JWT_SECRET_KEY" \
#   --from-literal=ENCRYPTION_KEY="$ENCRYPTION_KEY" \
#   --from-literal=DATABASE_URL="postgresql://mental_health_user:$POSTGRES_PASSWORD@postgres-service:5432/mental_health_db"