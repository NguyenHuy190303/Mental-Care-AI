apiVersion: v1
kind: ConfigMap
metadata:
  name: mental-health-agent-config
  namespace: mental-health-agent
data:
  # Application Configuration
  ENVIRONMENT: "production"
  DEBUG: "false"
  LOG_LEVEL: "INFO"
  
  # Database Configuration
  POSTGRES_HOST: "postgres-service"
  POSTGRES_PORT: "5432"
  POSTGRES_DB: "mental_health_db"
  POSTGRES_USER: "mental_health_user"
  
  # Redis Configuration
  REDIS_HOST: "redis-service"
  REDIS_PORT: "6379"
  
  # ChromaDB Configuration
  CHROMADB_HOST: "chromadb-service"
  CHROMADB_PORT: "8000"
  
  # API Configuration
  API_HOST: "0.0.0.0"
  API_PORT: "8000"
  CORS_ORIGINS: "https://mental-health-agent.com,https://app.mental-health-agent.com"
  
  # Rate Limiting
  RATE_LIMIT_REQUESTS: "100"
  RATE_LIMIT_WINDOW: "60"
  
  # Health Check Configuration
  HEALTH_CHECK_INTERVAL: "30"
  HEALTH_CHECK_TIMEOUT: "10"
  
  # Auto-scaling Configuration
  MIN_REPLICAS: "2"
  MAX_REPLICAS: "20"
  TARGET_CPU_UTILIZATION: "70"
  TARGET_MEMORY_UTILIZATION: "80"
  
  # Load Balancer Configuration
  LB_ALGORITHM: "round_robin"
  LB_HEALTH_CHECK_PATH: "/api/monitoring/health"
  LB_HEALTH_CHECK_INTERVAL: "10"
  
  # Crisis Intervention Configuration
  CRISIS_RESPONSE_TIMEOUT: "2"
  EMERGENCY_ESCALATION_ENABLED: "true"
  
  # Monitoring Configuration
  METRICS_ENABLED: "true"
  METRICS_PORT: "9090"
  TRACING_ENABLED: "true"
  
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: mental-health-agent
data:
  nginx.conf: |
    upstream backend {
        least_conn;
        server mental-health-backend-service:8000 max_fails=3 fail_timeout=30s;
    }
    
    upstream frontend {
        least_conn;
        server mental-health-frontend-service:3000 max_fails=3 fail_timeout=30s;
    }
    
    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=auth:10m rate=5r/s;
    limit_req_zone $binary_remote_addr zone=crisis:10m rate=20r/s;
    
    server {
        listen 80;
        server_name _;
        
        # Security headers
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains";
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' https://cdn.jsdelivr.net; style-src 'self' 'unsafe-inline' https://cdn.tailwindcss.com;";
        
        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
        
        # API endpoints with rate limiting
        location /api/ {
            limit_req zone=api burst=20 nodelay;
            
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Timeouts
            proxy_connect_timeout 5s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # Crisis intervention priority
            location /api/agent/chat {
                limit_req zone=crisis burst=50 nodelay;
                proxy_pass http://backend;
            }
            
            # Authentication rate limiting
            location /api/auth/ {
                limit_req zone=auth burst=10 nodelay;
                proxy_pass http://backend;
            }
        }
        
        # WebSocket support
        location /ws {
            proxy_pass http://backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket timeouts
            proxy_read_timeout 86400;
            proxy_send_timeout 86400;
        }
        
        # Frontend
        location / {
            proxy_pass http://frontend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # Static files caching
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            proxy_pass http://frontend;
        }
    }
    
    # Metrics endpoint for monitoring
    server {
        listen 9090;
        server_name _;
        
        location /metrics {
            stub_status on;
            access_log off;
            allow 10.0.0.0/8;
            allow 172.16.0.0/12;
            allow 192.168.0.0/16;
            deny all;
        }
    }
